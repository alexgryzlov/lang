// THIS FILE IS AUTOGENERATED. DO NOT CHANGE ANYTHING.

case 0: {
	fprintf(intial, "pushr");
	for (size_t i = 0; i < 1; i++) {
		++pc;
		fprintf(intial, " r%d", compiled_text[pc]);
	}
	fprintf(intial, "\n");
	break;
}
case 1: {
	fprintf(intial, "popr");
	for (size_t i = 0; i < 1; i++) {
		++pc;
		fprintf(intial, " r%d", compiled_text[pc]);
	}
	fprintf(intial, "\n");
	break;
}
case 2: {
	fprintf(intial, "add");
	fprintf(intial, "\n");
	break;
}
case 3: {
	fprintf(intial, "out");
	fprintf(intial, "\n");
	break;
}
case 4: {
	fprintf(intial, "in");
	fprintf(intial, "\n");
	break;
}
case 5: {
	fprintf(intial, "push");
	for (size_t i = 0; i < 1; i++) {
		++pc;
		fprintf(intial, " %d", compiled_text[pc]);
	}
	fprintf(intial, "\n");
	break;
}
case 6: {
	fprintf(intial, "pop");
	fprintf(intial, "\n");
	break;
}
case 7: {
	fprintf(intial, "jmp");
	for (size_t i = 0; i < 1; i++) {
		++pc;
		fprintf(intial, " label%d", compiled_text[compiled_text[pc]] & 0b1111);
	}
	fprintf(intial, "\n");
	break;
}
case 8: {
	fprintf(intial, "end");
	fprintf(intial, "\n");
	break;
}
case 9: {
	fprintf(intial, "cmp");
	for (size_t i = 0; i < 2; i++) {
		++pc;
		fprintf(intial, " r%d", compiled_text[pc]);
	}
	fprintf(intial, "\n");
	break;
}
case 10: {
	fprintf(intial, "je");
	for (size_t i = 0; i < 1; i++) {
		++pc;
		fprintf(intial, " label%d", compiled_text[compiled_text[pc]] & 0b1111);
	}
	fprintf(intial, "\n");
	break;
}
case 11: {
	fprintf(intial, "jb");
	for (size_t i = 0; i < 1; i++) {
		++pc;
		fprintf(intial, " label%d", compiled_text[compiled_text[pc]] & 0b1111);
	}
	fprintf(intial, "\n");
	break;
}
case 12: {
	fprintf(intial, "call");
	for (size_t i = 0; i < 1; i++) {
		++pc;
		fprintf(intial, " label%d", compiled_text[compiled_text[pc]] & 0b1111);
	}
	fprintf(intial, "\n");
	break;
}
case 13: {
	fprintf(intial, "ret");
	fprintf(intial, "\n");
	break;
}
case 14: {
	fprintf(intial, "mul");
	fprintf(intial, "\n");
	break;
}
case 15: {
	fprintf(intial, "sub");
	fprintf(intial, "\n");
	break;
}
case 16: {
	fprintf(intial, "ja");
	for (size_t i = 0; i < 1; i++) {
		++pc;
		fprintf(intial, " label%d", compiled_text[compiled_text[pc]] & 0b1111);
	}
	fprintf(intial, "\n");
	break;
}
case 17: {
	fprintf(intial, "jae");
	for (size_t i = 0; i < 1; i++) {
		++pc;
		fprintf(intial, " label%d", compiled_text[compiled_text[pc]] & 0b1111);
	}
	fprintf(intial, "\n");
	break;
}
case 18: {
	fprintf(intial, "jbe");
	for (size_t i = 0; i < 1; i++) {
		++pc;
		fprintf(intial, " label%d", compiled_text[compiled_text[pc]] & 0b1111);
	}
	fprintf(intial, "\n");
	break;
}
case 19: {
	fprintf(intial, "jne");
	for (size_t i = 0; i < 1; i++) {
		++pc;
		fprintf(intial, " label%d", compiled_text[compiled_text[pc]] & 0b1111);
	}
	fprintf(intial, "\n");
	break;
}
case 20: {
	fprintf(intial, "sqrt");
	fprintf(intial, "\n");
	break;
}
case 21: {
	fprintf(intial, "sqr");
	fprintf(intial, "\n");
	break;
}
case 22: {
	fprintf(intial, "div");
	fprintf(intial, "\n");
	break;
}
case 23: {
	fprintf(intial, "less");
	fprintf(intial, "\n");
	break;
}
case 24: {
	fprintf(intial, "equal");
	fprintf(intial, "\n");
	break;
}
case 25: {
	fprintf(intial, "cmptop");
	fprintf(intial, "\n");
	break;
}
