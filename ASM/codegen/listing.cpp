// THIS FILE IS AUTOGENERATED. DO NOT CHANGE ANYTHING.

case 0: {
	fprintf(listing, "%#010x", 0);
	for (size_t i = 0; i < 1; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "                   ");
	fprintf(listing, ";");
	fprintf(listing, "pushr");
	for (size_t i = 0; i < 1; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 1: {
	fprintf(listing, "%#010x", 1);
	for (size_t i = 0; i < 1; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "                   ");
	fprintf(listing, ";");
	fprintf(listing, "popr");
	for (size_t i = 0; i < 1; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 2: {
	fprintf(listing, "%#010x", 2);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "add");
	fprintf(listing, "\n");
	break;
}
case 3: {
	fprintf(listing, "%#010x", 3);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "out");
	fprintf(listing, "\n");
	break;
}
case 4: {
	fprintf(listing, "%#010x", 4);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "in");
	fprintf(listing, "\n");
	break;
}
case 5: {
	fprintf(listing, "%#010x", 5);
	for (size_t i = 0; i < 1; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "                   ");
	fprintf(listing, ";");
	fprintf(listing, "push");
	for (size_t i = 0; i < 1; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 6: {
	fprintf(listing, "%#010x", 6);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "pop");
	fprintf(listing, "\n");
	break;
}
case 7: {
	fprintf(listing, "%#010x", 7);
	for (size_t i = 0; i < 1; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "                   ");
	fprintf(listing, ";");
	fprintf(listing, "jmp");
	for (size_t i = 0; i < 1; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 8: {
	fprintf(listing, "%#010x", 8);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "end");
	fprintf(listing, "\n");
	break;
}
case 9: {
	fprintf(listing, "%#010x", 9);
	for (size_t i = 0; i < 2; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "        ");
	fprintf(listing, ";");
	fprintf(listing, "cmp");
	for (size_t i = 0; i < 2; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 10: {
	fprintf(listing, "%#010x", 10);
	for (size_t i = 0; i < 1; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "                   ");
	fprintf(listing, ";");
	fprintf(listing, "je");
	for (size_t i = 0; i < 1; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 11: {
	fprintf(listing, "%#010x", 11);
	for (size_t i = 0; i < 1; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "                   ");
	fprintf(listing, ";");
	fprintf(listing, "jb");
	for (size_t i = 0; i < 1; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 12: {
	fprintf(listing, "%#010x", 12);
	for (size_t i = 0; i < 1; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "                   ");
	fprintf(listing, ";");
	fprintf(listing, "call");
	for (size_t i = 0; i < 1; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 13: {
	fprintf(listing, "%#010x", 13);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "ret");
	fprintf(listing, "\n");
	break;
}
case 14: {
	fprintf(listing, "%#010x", 14);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "mul");
	fprintf(listing, "\n");
	break;
}
case 15: {
	fprintf(listing, "%#010x", 15);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "sub");
	fprintf(listing, "\n");
	break;
}
case 16: {
	fprintf(listing, "%#010x", 16);
	for (size_t i = 0; i < 1; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "                   ");
	fprintf(listing, ";");
	fprintf(listing, "ja");
	for (size_t i = 0; i < 1; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 17: {
	fprintf(listing, "%#010x", 17);
	for (size_t i = 0; i < 1; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "                   ");
	fprintf(listing, ";");
	fprintf(listing, "jae");
	for (size_t i = 0; i < 1; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 18: {
	fprintf(listing, "%#010x", 18);
	for (size_t i = 0; i < 1; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "                   ");
	fprintf(listing, ";");
	fprintf(listing, "jbe");
	for (size_t i = 0; i < 1; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 19: {
	fprintf(listing, "%#010x", 19);
	for (size_t i = 0; i < 1; i++) {
		++pc1;
		fprintf(listing, " %#010x", compiled_text[pc1]);
	}
	fprintf(listing, "                   ");
	fprintf(listing, ";");
	fprintf(listing, "jne");
	for (size_t i = 0; i < 1; i++) {
		++pc2;
		fprintf(listing, " %s", text[pc2].ptr);
	}
	fprintf(listing, "\n");
	break;
}
case 20: {
	fprintf(listing, "%#010x", 20);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "sqrt");
	fprintf(listing, "\n");
	break;
}
case 21: {
	fprintf(listing, "%#010x", 21);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "sqr");
	fprintf(listing, "\n");
	break;
}
case 22: {
	fprintf(listing, "%#010x", 22);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "div");
	fprintf(listing, "\n");
	break;
}
case 23: {
	fprintf(listing, "%#010x", 23);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "less");
	fprintf(listing, "\n");
	break;
}
case 24: {
	fprintf(listing, "%#010x", 24);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "equal");
	fprintf(listing, "\n");
	break;
}
case 25: {
	fprintf(listing, "%#010x", 25);
	fprintf(listing, "                              ");
	fprintf(listing, ";");
	fprintf(listing, "cmptop");
	fprintf(listing, "\n");
	break;
}
